name: Deploy Microservices

on:
  push:
    paths:
      - 'Books API/**'
      - 'Users API/**'
      - 'Reservation API/**'
  workflow_dispatch:  # Allows manual triggering

env:
  ECR_REPO: capstone-lms  # Base name for ECR repositories (e.g., capstone-lms/books)
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE_BOOKS: books-service
  ECS_SERVICE_USERS: users-service
  ECS_SERVICE_RESERVATION: reservation-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug Environment Variables
        run: |
          echo "AWS_REGION: $AWS_REGION"
          echo "AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID"
          echo "AWS_ACCESS_KEY_ID (masked): ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY (masked): ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          if [ -z "$AWS_REGION" ] || [ -z "$AWS_ACCOUNT_ID" ]; then
            echo "Error: AWS_REGION or AWS_ACCOUNT_ID is not set"
            exit 1
          fi

      - name: Login to Amazon ECR
        run: |
          # Debug the ECR URI
          ECR_URI="051826698039.dkr.ecr.us-east-1.amazonaws.com"
          echo "ECR_URI: $ECR_URI"
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 051826698039.dkr.ecr.us-east-1.amazonaws.com

      - name: Determine Changed Services
        id: filter
        run: |
          CHANGED_SERVICES=""

          if git diff --name-only HEAD^ HEAD | grep '^Books API/'; then
            CHANGED_SERVICES="$CHANGED_SERVICES books"
          fi

          if git diff --name-only HEAD^ HEAD | grep '^Users API/'; then
            CHANGED_SERVICES="$CHANGED_SERVICES users"
          fi

          if git diff --name-only HEAD^ HEAD | grep '^Reservation API/'; then
            CHANGED_SERVICES="$CHANGED_SERVICES reservation"
          fi

          # Trim leading space if present
          CHANGED_SERVICES=$(echo "$CHANGED_SERVICES" | sed 's/^ //')
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Build and Push Docker Images for Changed Services
        run: |
          IMAGE_TAG=$(date +%s)

          if [[ $CHANGED_SERVICES == *"books"* ]]; then
            docker build -t 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/books:$IMAGE_TAG ./Books\ API
            docker push 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/books:$IMAGE_TAG
          fi

          if [[ $CHANGED_SERVICES == *"users"* ]]; then
            docker build -t 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/users:$IMAGE_TAG ./Users\ API
            docker push 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/users:$IMAGE_TAG
          fi

          if [[ $CHANGED_SERVICES == *"reservation"* ]]; then
            docker build -t 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/reservation:$IMAGE_TAG ./Reservation\ API
            docker push 051826698039.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPO/reservation:$IMAGE_TAG
          fi

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
