name: Deploy APIs to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Books API/**'
      - 'Users API/**'
      - 'Reservation API/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_apis: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect changed directories
        id: filter
        run: |
          CHANGED_APIS=""
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^Books API/'; then
            CHANGED_APIS+="books,"
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^Users API/'; then
            CHANGED_APIS+="users,"
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^Reservation API/'; then
            CHANGED_APIS+="reservation,"
          fi
          CHANGED_APIS=${CHANGED_APIS%,} # Remove trailing comma
          echo "changed=$CHANGED_APIS" >> $GITHUB_OUTPUT

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.changed_apis != ''
    strategy:
      matrix:
        api: ${{ fromJson('["books", "users", "reservation"]') }}
        include:
          - api: books
            folder: "Books API"
            ecr_repo: "capstone-lms/books"
          - api: users
            folder: "Users API"
            ecr_repo: "capstone-lms/users"
          - api: reservation
            folder: "Reservation API"
            ecr_repo: "capstone-lms/reservation"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if API was modified
        id: check-api
        run: |
          if echo "${{ needs.detect-changes.outputs.changed_apis }}" | grep -q "${{ matrix.api }}"; then
            echo "build=true" >> $GITHUB_ENV
          else
            echo "build=false" >> $GITHUB_ENV
        shell: bash

      - name: Configure AWS credentials
        if: env.build == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: env.build == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        if: env.build == 'true'
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          ECR_REPO="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.ecr_repo }}"
          
          cd "${{ matrix.folder }}"
          
          docker build -t "$ECR_REPO:$IMAGE_TAG" .
          docker push "$ECR_REPO:$IMAGE_TAG"
          
          echo "Pushed image: $ECR_REPO:$IMAGE_TAG"
