name: Deploy Microservices

on:
  push:
    paths:
      - 'Books API/**'
      - 'Users API/**'
      - 'Reservation API/**'
  workflow_dispatch:  # Allows manual triggering

env:
  ECR_REPO: capstone-lms  # Base name for ECR repositories
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE_BOOKS: books-service
  ECS_SERVICE_USERS: users-service
  ECS_SERVICE_RESERVATION: reservation-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Updated to latest version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get AWS Account ID
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Determine Changed Services
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            CHANGED_SERVICES=""
            if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^Books API/'; then
              CHANGED_SERVICES="$CHANGED_SERVICES books"
            fi
            if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^Users API/'; then
              CHANGED_SERVICES="$CHANGED_SERVICES users"
            fi
            if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^Reservation API/'; then
              CHANGED_SERVICES="$CHANGED_SERVICES reservation"
            fi
            CHANGED_SERVICES=$(echo "$CHANGED_SERVICES" | sed 's/^ //')
          else
            CHANGED_SERVICES="books users reservation"
          fi
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Build and Push Docker Images for Changed Services
        run: |
          IMAGE_TAG=$(date +%s)
          if [[ $CHANGED_SERVICES == *"books"* ]]; then
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-books:$IMAGE_TAG ./Books\ API
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-books:$IMAGE_TAG
          fi
          if [[ $CHANGED_SERVICES == *"users"* ]]; then
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-users:$IMAGE_TAG ./Users\ API
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-users:$IMAGE_TAG
          fi
          if [[ $CHANGED_SERVICES == *"reservation"* ]]; then
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-reservation:$IMAGE_TAG ./Reservation\ API
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO-reservation:$IMAGE_TAG
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
